<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="DefaultTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF3E3E42" />
        <Setter Property="Background" Value="#FF2C2C2C" />
        <Setter Property="Foreground" Value="#B2FFFFFF" />
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="SelectionBrush" Value="#FF007ACC" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="8,4" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#33FFFFFF" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="#33FFFFFF" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#FF474747" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#B2FFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Left">
                        <StackPanel Orientation="Horizontal" Margin="0,3" VerticalAlignment="Center">
                            <Viewbox Width="16" Height="16">
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="Icon" Data="{DynamicResource CheckmarkFalseIcon}" Fill="#33FFFFFF" />
                                </Canvas>
                            </Viewbox>
                            <ContentPresenter Margin="8,0,0,0" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Data" Value="{DynamicResource CheckmarkTrueIcon}" />
                            <Setter TargetName="Icon" Property="Fill" Value="#B2FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="#B2FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoTextCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#33FFFFFF" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <StackPanel Orientation="Horizontal" Margin="0,3">
                            <Viewbox Width="16" Height="16">
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="Icon" Data="{DynamicResource CheckmarkFalseIcon}" Fill="{TemplateBinding Foreground}" />
                                </Canvas>
                            </Viewbox>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Data" Value="{DynamicResource CheckmarkTrueIcon}" />
                            <Setter Property="Foreground" Value="#FF5E8B21" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#B2FFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Left">
                        <StackPanel Orientation="Horizontal" Margin="0,3">
                            <Viewbox Width="16" Height="16">
                                <Canvas Width="24" Height="24">
                                    <Path x:Name="Icon" Data="{DynamicResource CheckmarkFalseIcon}" Fill="#33FFFFFF" />
                                </Canvas>
                            </Viewbox>
                            <ContentPresenter Margin="8,0,0,0" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Data" Value="{DynamicResource CheckmarkTrueIcon}" />
                            <Setter TargetName="Icon" Property="Fill" Value="#B2FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="#B2FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>