<UserControl x:Name="RadarrViewControl" x:Class="Organizerr.Views.RadarrView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Organizerr.ViewModels"
             xmlns:radarrEnum="clr-namespace:RadarrSharp.Enums;assembly=RadarrSharp"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             d:DataContext="{d:DesignInstance vm:RadarrViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1674.664">

    <UserControl.Resources>
        <ObjectDataProvider x:Key="MinimumAvailabilityEnumData" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="radarrEnum:MinimumAvailability" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBox Text="{Binding Path=SearchTerm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}" Padding="4" />

            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button Content="Search for missing" Padding="8,4" />
                <Button Content="Unmonitor downloaded" Padding="8,4" />
                <Button Content="Unmonitor where cutoff has been met" Padding="8,4" />
            </StackPanel>
            
        </Grid>

        <DataGrid x:Name="MoviesGrid" Grid.Row="1" ItemsSource="{Binding Path=MoviesView}" AutoGenerateColumns="False" CanUserAddRows="False">
            <DataGrid.Columns>

                <DataGridTemplateColumn Header="Downloaded" SortMemberPath="Downloaded" Width="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Background" Value="Red" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Downloaded}" Value="True">
                                                <Setter Property="Background" Value="Green" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Monitored" SortMemberPath="Monitored">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton IsChecked="{Binding Path=Monitored}" Content="{Binding Path=Monitored}" IsEnabled="{Binding ElementName=RadarrViewControl, Path=DataContext.ToggleMonitoredStatusIsBusy, Converter={StaticResource InvertedBooleanConverter}}" ToolTip="Toggle Monitored status">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding ElementName=RadarrViewControl, Path=DataContext.ToggleMonitoredStatusCommand}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ToggleButton>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <DataGridTextColumn Binding="{Binding Path=Year}" Header="Year" IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding Path=Title}" Header="Title" IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding Path=Status}" Header="Status" IsReadOnly="True" />
                <!--
                <DataGridTemplateColumn Header="Movie">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=Title}" />
                                <TextBlock Text="{Binding Path=Year}" TextWrapping="Wrap" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                -->
                <DataGridTextColumn Binding="{Binding Path=MovieFile.Quality.Quality.Name}" Header="Quality" IsReadOnly="True" />

                <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource MinimumAvailabilityEnumData}, Mode=OneWay}" SelectedItemBinding="{Binding Path=MinimumAvailability}" Header="Minimum Availability" />

                <DataGridCheckBoxColumn Header="Cutoff Met" IsReadOnly="True">
                    <DataGridCheckBoxColumn.Binding>
                        <MultiBinding Converter="{StaticResource IsCutoffMetToBooleanConverter}">
                            <Binding Path="QualityProfileId" />
                            <Binding Path="MovieFile.Quality.Quality.Id" />
                            <Binding ElementName="RadarrViewControl" Path="DataContext.Profiles" />
                        </MultiBinding>
                    </DataGridCheckBoxColumn.Binding>
                </DataGridCheckBoxColumn>

                <DataGridTextColumn Binding="{Binding Path=MovieFile.Size, Converter={StaticResource BytesToSizeWithSuffixConverter}}" Header="Movie Size" IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding Path=MovieFile.RelativePath}" Header="Filename" IsReadOnly="True" />
                
                <DataGridTemplateColumn Header="Movie">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Delete" HorizontalAlignment="Left" Padding="8,0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Movie">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Search" HorizontalAlignment="Left" Padding="8,0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
